<!-- input.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Add your existing meta tags and styles -->
    <style media="screen">
        body {
            background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url("https://cdn.create.vista.com/api/media/small/25035765/stock-photo-underground-parking");
            background-repeat: no-repeat;
            background-size: cover;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        
        .container {
            color: #F0EAD6;
        }
        /* Your existing CSS */

        /* Add this block to change the input box color */
        #startTime {
            color: #f0ead6; /* Change to your desired light color */
            background-color: transparent; /* Sets the background to transparent */
            border: 1px solid #f0ead6; /* Sets a border color */
            border-radius: 5px; /* Rounds the corners */
            padding: 8px; /* Adds padding for better appearance */
        }

        h1 {
            position: absolute;
            left: 50%;
            top: 30%;
            transform: translate(-50%, -50%);
            font-size: 80px;
            -webkit-text-stroke: 1px #5517c7;
            /* color: transparent; */
            background-image: linear-gradient(#6265a9, #4207ca);
            background-repeat: no-repeat;
            /* Set background-clip to text */
            -webkit-background-clip: text; /* For older browsers */
            background-clip: text;
            background-position: -750px 0;
            animation: backcolor 10s linear infinite alternate;
        }
        
        @keyframes backcolor {
            100% {
                background-position: 0 0;
                background-color: #0056b3;
            }
        }
        
        .form-box {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        
        label {
            font-size: 30px;
            font-weight: 400;
        }
        
        .btn {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 30px;
        }
        
        button {
            margin-left: 40px;
            width: 70%;
            height: 45px;
            background: #007bff;
            border: none;
            outline: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            color: #fff;
            font-weight: 500;
        }
        
        button:hover {
            transition: 1s;
            background-color: #0056b3;
        }
        /* Style the book slot button link */
        #bookButton {
            display: inline-block;
            text-decoration: none;
            color: #fff;
            padding: 10px 20px; /* Adjust padding */
            border-radius: 6px;
            background-color: #007bff;
            transition: background-color 0.3s ease;
        }

        #bookButton:hover {
            background-color: #0056b3;
        }
        
    
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mt-5">Book a Parking Slot</h1>
        <form id="bookingForm" action="/storeStartTime" method="post">
            <label for="startTime">Enter starting time (0-23):</label>
            <input type="number" id="startTime" name="startTime" required min="0" max="23">
            
            <!-- Use a regular button to trigger the slot availability check -->
            <button type="button" id="bookButton" >Book Slot</button>
        </form>
    </div>

    <script>
        document.getElementById('bookButton').addEventListener('click', checkSlotAvailability);

        function checkSlotAvailability() {
            const startTimeString = document.getElementById('startTime').value;
            const startTime = parseInt(startTimeString, 10);
            const currentTime = new Date().getHours();
            if (isNaN(startTime) || startTime < 0 || startTime > 23||startTime<currentTime) {
                alert('Invalid start time. Please enter a valid hour.');
                return;
            }

            // Use fetch to check slot availability
            fetch('/checkSlotAvailability', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ startTime: startTime }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.slotAvailable) {
                    // If slot is available, proceed to start-payment
                    console.log('Slot is available. Redirecting to start-payment.');
                    redirectToStartPayment(startTime);
                } else {
                    // If slot is not available, display a message
                    alert('No available slots for the selected start time. Please choose another time.');
                }
            })
            .catch(error => {
                console.error('Error checking slot availability:', error);
                alert('Error checking slot availability. Please try again.');
            });
        }

        function redirectToStartPayment(startTime) {
            // Use fetch to send user input to /storeStartTime
            fetch('/storeStartTime', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ startTime: startTime }),
            })
            .then(response => response.json())
            .then(data => {
                console.log('Start time stored on the server:', data.startTime);

                // Redirect to the correct route: /start-payment using window.location.pathname
                window.location.pathname = '/slotpayment';
            })
            .catch(error => {
                console.error('Error storing start time on the server:', error);
                alert('Error storing start time. Please try again.');
            });
        }
    </script>
</body>
</html>

